@model AllRadiosQueryModel
@{
    ViewBag.Title = $"All Radios";
}

<div class="d-flex justify-content-between align-items-center gap-5">
    <h1 class="">@ViewBag.Title</h1>
    <form method="get">
        <div class="row bg-secondary rounded-3">
            <div class="form-group col-md-3 d-flex justify-content-between">
                <div class="form-group">
                    <label asp-for="Group"></label>
                    <select asp-for="Group" class="form-control">
                        <option value="">All</option>
                        @foreach (var category in Model.Groups)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group col-md-3 w-25">
                <label asp-for="SearchTerm"></label>
                <input asp-for="SearchTerm" class="form-control" placeholder="search...">
            </div>

            <div class="form-group col-md-3">
                <div class="form-group">
                    <label asp-for="Sorting"></label>
                    <select asp-for="Sorting" class="form-control">
                        <option value="0">Default</option>
                        <option value="1">A - Z</option>
                        <option value="2">Z - A</option>
                        <option value="3">Favorites</option>
                    </select>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group p-4">
                    <input type="submit" value="Search" class="btn btn-dark" />
                </div>
            </div>
        </div>
    </form>
</div>
<br />
<br />

@if (!Model.Radios.Any())
{
    <h2 class="text-center">No radios found by the given criteria!</h2>
}
<partial name="_RadioPartialSortByDefault"></partial>
<br />

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalRadiosCount /
        Model.RadiosPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Radio"
           asp-action="Collection"
           asp-route-currentPage="@previousPage"
           asp-route-group="@Model.Group"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">previous</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Radios.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Radio"
           asp-action="Collection"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-group="@Model.Group"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">next</a>
    </div>
</div>

